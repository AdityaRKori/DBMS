# -*- coding: utf-8 -*-
"""dbmsLesson.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1f6z6MalRgzUoef1vCsdx6venDBY1Es4Y
"""

# prompt: read the excel file

import pandas as pd

# Replace 'your_file.xlsx' with the actual path to your Excel file
# If the file is in your Google Drive, you might need to adjust the path accordingly
# Example: /content/drive/MyDrive/your_file.xlsx
df = pd.read_excel('/content/Length_of_Stay_Dataset.xlsx')

df

df.columns

df.columns = df.columns.str.replace(' ', '_')
df.columns

import psycopg2
DATABASE_URL = "postgresql://neondb_owner:Qtd1uF9jpzTR@ep-curly-truth-a5qcobin.us-east-2.aws.neon.tech/neondb?sslmode=require"

# prompt: create table = 'Patient_ID', 'Age', 'Gender', 'Admission_Type', 'Primary_Diagnosis',
#        'Comorbidities', 'Previous_Hospitalizations', 'BP', 'Heart_rate',
#        'Surgical_Procedures', 'Severity_of_Illness', 'Insurance_Type',
#        'Socioeconomic_Status', 'Hospital_Total_Beds', 'Room_Type',
#        'Discharge_Destination', 'Length_of_Stay_in_days' = remove the single quotes

conn = psycopg2.connect(DATABASE_URL)
cur = conn.cursor()

# Define the table name
table_name = 'patient_data'  # Use a more descriptive table name if needed

# Construct the CREATE TABLE statement dynamically
create_table_query = f"""
CREATE TABLE IF NOT EXISTS {table_name} (
    Patient_ID INTEGER,
    Age INTEGER,
    Gender VARCHAR(255),
    Admission_Type VARCHAR(255),
    Primary_Diagnosis VARCHAR(255),
    Comorbidities VARCHAR(255),
    Previous_Hospitalizations INTEGER,
    BP VARCHAR(255),
    Heart_rate INTEGER,
    Surgical_Procedures VARCHAR(255),
    Severity_of_Illness VARCHAR(255),
    Insurance_Type VARCHAR(255),
    Socioeconomic_Status VARCHAR(255),
    Hospital_Total_Beds INTEGER,
    Room_Type VARCHAR(255),
    Discharge_Destination VARCHAR(255),
    Length_of_Stay_in_days INTEGER
)
"""
cur.execute(create_table_query)
conn.commit()
print(f"Table '{table_name}' created successfully.")

# Insert data into the table using a parameterized query
# for index, row in df.iterrows():
#     insert_query = f"""
#     INSERT INTO {table_name} (
#         Patient_ID, Age, Gender, Admission_Type, Primary_Diagnosis, Comorbidities,
#         Previous_Hospitalizations, BP, Heart_rate, Surgical_Procedures,
#         Severity_of_Illness, Insurance_Type, Socioeconomic_Status,
#         Hospital_Total_Beds, Room_Type, Discharge_Destination, Length_of_Stay_in_days
#     ) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
#     """
#     cur.execute(insert_query, tuple(row))
#     conn.commit()

cur.close()
conn.close()

create_table_query = """
CREATE TABLE IF NOT EXISTS length_of_stay (
    'Patient_ID', 'Age', 'Gender', 'Admission_Type', 'Primary_Diagnosis',
       'Comorbidities', 'Previous_Hospitalizations', 'BP', 'Heart_rate',
       'Surgical_Procedures', 'Severity_of_Illness', 'Insurance_Type',
       'Socioeconomic_Status', 'Hospital_Total_Beds', 'Room_Type',
       'Discharge_Destination', 'Length_of_Stay_in_days'
       );
       """

# CREATE TABLE QUERY
create_table_query = """
CREATE TABLE IF NOT EXISTS length_of_stay1 (
  Patient_ID integer, Age integer, Gender text, Admission_Type text, Primary_Diagnosis text,
       Comorbidities text, Previous_Hospitalizations integer, BP text, Heart_rate decimal,
       Surgical_Procedures text, Severity_of_Illness text, Insurance_Type text,
       Socioeconomic_Status text, Hospital_Total_Beds integer, Room_Type text,
       Discharge_Destination text, Length_of_Stay_in_days integer
);
"""

try:

  conn = psycopg2.connect(DATABASE_URL)
  cur = conn.cursor()
  cur.execute(create_table_query)
  conn.commit()
  cur.close()
  conn.close()

except Exception as e:
    print(e)

df.shape

import numpy as np
df = df.replace({np.nan: None})

tuples = [tuple(x) for x in df.to_numpy()]

df

from psycopg2.extras import execute_values
insert_query = """INSERT INTO length_of_stay1 (Patient_ID, Age, Gender, Admission_Type, Primary_Diagnosis,
       Comorbidities, Previous_Hospitalizations, BP, Heart_rate,
       Surgical_Procedures, Severity_of_Illness, Insurance_Type,
       Socioeconomic_Status, Hospital_Total_Beds, Room_Type,
       Discharge_Destination, Length_of_Stay_in_days) VALUES %s"""

try:
  conn = psycopg2.connect(DATABASE_URL)
  cursor = conn.cursor()
  execute_values(cursor, insert_query, tuples)
  conn.commit()
  cursor.close()
  conn.close()
except Exception as e:
  print(e)

query1 ="""SELECT * FROM length_of_stay1"""

try:
  conn = psycopg2.connect(DATABASE_URL)
  cur = conn.cursor()
  cur.execute(query1)
  rows = cur.fetchall()
  df = pd.DataFrame(rows, columns=df.columns)
  cur.close()
  conn.close()
except Exception as e:
  print(e)

df.head()

query2 = """select * from medicalrecords"""

try:
  conn = psycopg2.connect(DATABASE_URL)
  cursor = conn.cursor()
  cursor.execute(query2)
  rows = cursor.fetchall()
  df2 = pd.DataFrame(rows,columns=["name","diagnosis",'prescription','doctor_id'])
  cursor.close()
  conn.close()

except Exception as e:
  print(e)

df.head()

query4 = """select gender,avg(age) from length_of_stay group by gender """

query4 = """select gender,avg(age) from length_of_stay group by gender """
try:
  conn = psycopg2.connect(DATABASE_URL)
  cursor = conn.cursor()
  cursor.execute(query4)
  rows = cursor.fetchall()
  df4 = pd.DataFrame(rows,columns=['gender','age'])
  cursor.close()
  conn.close()

except Exception as e:
  print(e)
df

query5 = """UPDATE length_of_stay SET Gender = 'Male' WHERE Patient_ID = 59213"""

try:
  conn = psycopg2.connect(DATABASE_URL)
  cursor = conn.cursor()
  cursor.execute(query5)
  conn.commit()
  cursor.close()
  conn.close()
  print("Updated successfully")
except Exception as e:
  print(e)